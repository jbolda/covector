name: "covector"
description: "Sane change management in polyglot, monorepos, single"
inputs:
  command:
    description: covector cli command to run
    required: true
  token:
    description: Github Token or PAT for creating releases / posting messages
    required: false
    default: ""
  cwd:
    description: The directory to run covector within.
    required: false
    default: ""
  createRelease:
    description: Opt-in to create a release on publish
    required: false
    default: false
  draftRelease:
    description: When creating a release, set it as a draft.
    required: false
    default: false
  filterPackages:
    description: A comma separated list (no spaces) of packages to run commands on rather than everything listed in the config.
    required: false
    default: ""
  comment:
    description: Include a comment on the pull request including context around the comment run
    required: false
    defaults: false
  recognizeContributors:
    description: Include contributor and reviewer names within changelog
    required: false
    defaults: false
  label:
    description: "the Github pull request label that triggers preview packages"
    required: false
    default: preview
  previewVersion:
    description: Template for how the preview packages should be versioned
    required: false
    default: date
  identifier:
    description: Identifier for prerelease version template
    required: false
    default: branch
  releaseCommitish:
    description: "Any branch or commit SHA the release's Git tag is created from. Default: SHA of current commit"
outputs:
  status:
    description: Returns either "No changes." or a dynamic list of packages changed.
  change:
    description: The changes that were applied
  commandRan:
    description: The command ran (particularly useful for 'version-or-publish' input option).
  successfulPublish:
    description: Boolean as a string if we published anything. Useful to skip follow-on steps with nothing published.
  packagesPublished:
    description: Comma separated list of all of the packages that published. Most useful for chaining runs together to act on the filtered list.
  templatePipe:
    description: A stringified key/value pair object of the `pipe` that is passed to each command.
  releaseUrl:
    description: The URL users can navigate to in order to view the release.
  releaseUploadUrl:
    description: The URL for uploading assets to the release, which could be used by GitHub Actions for additional uses.
  releaseId:
    description: The ID of the created release. Only present when `createRelease` is set to true.
runs:
  using: "node20"
  main: "dist/index.js"
branding:
  icon: "sliders"
  color: "green"
