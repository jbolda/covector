// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`assemble changes assembles deps 1`] = `
Object {
  "changes": Array [
    Object {
      "releases": Object {
        "all": "minor",
      },
      "summary": "This is a test.",
    },
  ],
  "releases": Object {
    "all": Object {
      "changes": Array [
        Object {
          "releases": Object {
            "all": "minor",
          },
          "summary": "This is a test.",
        },
      ],
      "type": "minor",
    },
  },
}
`;

exports[`assemble changes in preMode with existing changes that upgrade 1`] = `
Object {
  "changes": Array [
    Object {
      "releases": Object {
        "assemble1": "minor",
        "assemble2": "patch",
      },
      "summary": "This is a test.",
    },
    Object {
      "releases": Object {
        "assemble1": "patch",
        "assemble2": "major",
      },
      "summary": "This is a test.",
    },
    Object {
      "releases": Object {
        "@namespaced/assemble2": "patch",
        "assemble1": "patch",
      },
      "summary": "This is a test. We might link out to a [website](https://www.jacobbolda.com).",
    },
  ],
  "releases": Object {
    "@namespaced/assemble2": Object {
      "changes": Array [
        Object {
          "releases": Object {
            "@namespaced/assemble2": "patch",
            "assemble1": "patch",
          },
          "summary": "This is a test. We might link out to a [website](https://www.jacobbolda.com).",
        },
      ],
      "type": "prepatch",
    },
    "assemble1": Object {
      "changes": Array [
        Object {
          "releases": Object {
            "assemble1": "minor",
            "assemble2": "patch",
          },
          "summary": "This is a test.",
        },
        Object {
          "releases": Object {
            "assemble1": "patch",
            "assemble2": "major",
          },
          "summary": "This is a test.",
        },
        Object {
          "releases": Object {
            "@namespaced/assemble2": "patch",
            "assemble1": "patch",
          },
          "summary": "This is a test. We might link out to a [website](https://www.jacobbolda.com).",
        },
      ],
      "type": "preminor",
    },
    "assemble2": Object {
      "changes": Array [
        Object {
          "releases": Object {
            "assemble1": "minor",
            "assemble2": "patch",
          },
          "summary": "This is a test.",
        },
        Object {
          "releases": Object {
            "assemble1": "patch",
            "assemble2": "major",
          },
          "summary": "This is a test.",
        },
      ],
      "type": "premajor",
    },
  },
}
`;

exports[`assemble changes in preMode with existing changes with the same bump 1`] = `
Object {
  "changes": Array [
    Object {
      "releases": Object {
        "assemble1": "minor",
        "assemble2": "patch",
      },
      "summary": "This is a test.",
    },
    Object {
      "releases": Object {
        "@namespaced/assemble2": "patch",
        "assemble1": "patch",
      },
      "summary": "This is a test. We might link out to a [website](https://www.jacobbolda.com).",
    },
  ],
  "releases": Object {
    "@namespaced/assemble2": Object {
      "changes": Array [
        Object {
          "releases": Object {
            "@namespaced/assemble2": "patch",
            "assemble1": "patch",
          },
          "summary": "This is a test. We might link out to a [website](https://www.jacobbolda.com).",
        },
      ],
      "type": "prepatch",
    },
    "assemble1": Object {
      "changes": Array [
        Object {
          "releases": Object {
            "assemble1": "minor",
            "assemble2": "patch",
          },
          "summary": "This is a test.",
        },
        Object {
          "releases": Object {
            "@namespaced/assemble2": "patch",
            "assemble1": "patch",
          },
          "summary": "This is a test. We might link out to a [website](https://www.jacobbolda.com).",
        },
      ],
      "type": "preminor",
    },
    "assemble2": Object {
      "changes": Array [
        Object {
          "releases": Object {
            "assemble1": "minor",
            "assemble2": "patch",
          },
          "summary": "This is a test.",
        },
      ],
      "type": "prerelease",
    },
  },
}
`;

exports[`assemble changes in preMode with no existing changes 1`] = `
Object {
  "changes": Array [
    Object {
      "releases": Object {
        "assemble1": "patch",
        "assemble2": "patch",
      },
      "summary": "This is a test.",
    },
    Object {
      "releases": Object {
        "assemble1": "minor",
        "assemble2": "patch",
      },
      "summary": "This is a test.",
    },
    Object {
      "releases": Object {
        "assemble1": "patch",
        "assemble2": "major",
      },
      "summary": "This is a test.",
    },
    Object {
      "releases": Object {
        "@namespaced/assemble2": "patch",
        "assemble1": "patch",
      },
      "summary": "This is a test. We might link out to a [website](https://www.jacobbolda.com).",
    },
  ],
  "releases": Object {
    "@namespaced/assemble2": Object {
      "changes": Array [
        Object {
          "releases": Object {
            "@namespaced/assemble2": "patch",
            "assemble1": "patch",
          },
          "summary": "This is a test. We might link out to a [website](https://www.jacobbolda.com).",
        },
      ],
      "type": "prepatch",
    },
    "assemble1": Object {
      "changes": Array [
        Object {
          "releases": Object {
            "assemble1": "patch",
            "assemble2": "patch",
          },
          "summary": "This is a test.",
        },
        Object {
          "releases": Object {
            "assemble1": "minor",
            "assemble2": "patch",
          },
          "summary": "This is a test.",
        },
        Object {
          "releases": Object {
            "assemble1": "patch",
            "assemble2": "major",
          },
          "summary": "This is a test.",
        },
        Object {
          "releases": Object {
            "@namespaced/assemble2": "patch",
            "assemble1": "patch",
          },
          "summary": "This is a test. We might link out to a [website](https://www.jacobbolda.com).",
        },
      ],
      "type": "preminor",
    },
    "assemble2": Object {
      "changes": Array [
        Object {
          "releases": Object {
            "assemble1": "patch",
            "assemble2": "patch",
          },
          "summary": "This is a test.",
        },
        Object {
          "releases": Object {
            "assemble1": "minor",
            "assemble2": "patch",
          },
          "summary": "This is a test.",
        },
        Object {
          "releases": Object {
            "assemble1": "patch",
            "assemble2": "major",
          },
          "summary": "This is a test.",
        },
      ],
      "type": "premajor",
    },
  },
}
`;

exports[`assemble changes runs 1`] = `
Object {
  "changes": Array [
    Object {
      "releases": Object {
        "assemble1": "patch",
        "assemble2": "patch",
      },
      "summary": "This is a test.",
    },
    Object {
      "releases": Object {
        "assemble1": "minor",
        "assemble2": "patch",
      },
      "summary": "This is a test.",
    },
    Object {
      "releases": Object {
        "assemble1": "patch",
        "assemble2": "major",
      },
      "summary": "This is a test.",
    },
    Object {
      "releases": Object {
        "@namespaced/assemble2": "patch",
        "assemble1": "patch",
      },
      "summary": "This is a test. We might link out to a [website](https://www.jacobbolda.com).",
    },
  ],
  "releases": Object {
    "@namespaced/assemble2": Object {
      "changes": Array [
        Object {
          "releases": Object {
            "@namespaced/assemble2": "patch",
            "assemble1": "patch",
          },
          "summary": "This is a test. We might link out to a [website](https://www.jacobbolda.com).",
        },
      ],
      "type": "patch",
    },
    "assemble1": Object {
      "changes": Array [
        Object {
          "releases": Object {
            "assemble1": "patch",
            "assemble2": "patch",
          },
          "summary": "This is a test.",
        },
        Object {
          "releases": Object {
            "assemble1": "minor",
            "assemble2": "patch",
          },
          "summary": "This is a test.",
        },
        Object {
          "releases": Object {
            "assemble1": "patch",
            "assemble2": "major",
          },
          "summary": "This is a test.",
        },
        Object {
          "releases": Object {
            "@namespaced/assemble2": "patch",
            "assemble1": "patch",
          },
          "summary": "This is a test. We might link out to a [website](https://www.jacobbolda.com).",
        },
      ],
      "type": "minor",
    },
    "assemble2": Object {
      "changes": Array [
        Object {
          "releases": Object {
            "assemble1": "patch",
            "assemble2": "patch",
          },
          "summary": "This is a test.",
        },
        Object {
          "releases": Object {
            "assemble1": "minor",
            "assemble2": "patch",
          },
          "summary": "This is a test.",
        },
        Object {
          "releases": Object {
            "assemble1": "patch",
            "assemble2": "major",
          },
          "summary": "This is a test.",
        },
      ],
      "type": "major",
    },
  },
}
`;

exports[`merge config test merges nested bumps 1`] = `
Object {
  "commands": Array [
    Object {
      "command": Array [
        "true",
      ],
      "dependencies": Array [
        "assemble1",
        "all",
      ],
      "errorOnVersionRange": null,
      "manager": undefined,
      "path": "./packages/assemble1",
      "pkg": "assemble1",
      "postcommand": null,
      "precommand": null,
      "type": "minor",
    },
    Object {
      "command": Array [
        "true",
      ],
      "dependencies": Array [
        "all",
      ],
      "errorOnVersionRange": null,
      "manager": undefined,
      "path": "./packages/assemble2",
      "pkg": "assemble2",
      "postcommand": null,
      "precommand": null,
      "type": "minor",
    },
    Object {
      "command": Array [
        "true",
      ],
      "dependencies": undefined,
      "errorOnVersionRange": null,
      "manager": undefined,
      "path": undefined,
      "pkg": "all",
      "postcommand": null,
      "precommand": null,
      "type": "minor",
    },
  ],
  "pipeTemplate": Object {
    "all": Object {
      "name": "all",
      "pipe": Object {
        "pkg": Object {
          "command": true,
          "dependencies": undefined,
          "errorOnVersionRange": null,
          "manager": undefined,
          "path": undefined,
          "pkg": "all",
          "postcommand": null,
          "precommand": null,
        },
        "release": Object {
          "changes": Array [
            Object {
              "releases": Object {
                "all": "minor",
              },
              "summary": "This is a test.",
            },
          ],
          "type": "minor",
        },
      },
    },
    "assemble1": Object {
      "name": "assemble1",
      "pipe": Object {
        "pkg": Object {
          "command": true,
          "dependencies": Array [
            "assemble1",
            "all",
          ],
          "errorOnVersionRange": null,
          "manager": undefined,
          "path": "./packages/assemble1",
          "pkg": "assemble1",
          "postcommand": null,
          "precommand": null,
        },
        "release": Object {
          "changes": Array [
            Object {
              "releases": Object {
                "assemble1": "patch",
              },
              "summary": "This is a test.",
            },
          ],
          "type": "minor",
        },
      },
    },
    "assemble2": Object {
      "name": "assemble2",
      "pipe": Object {
        "pkg": Object {
          "command": true,
          "dependencies": Array [
            "all",
          ],
          "errorOnVersionRange": null,
          "manager": undefined,
          "path": "./packages/assemble2",
          "pkg": "assemble2",
          "postcommand": null,
          "precommand": null,
        },
        "release": Object {
          "changes": Array [
            Object {
              "releases": Object {
                "all": "minor",
              },
              "summary": "This is a test.",
            },
          ],
          "type": "minor",
        },
      },
    },
  },
}
`;

exports[`merge config test merges publish 1`] = `
Array [
  Object {
    "command": Array [
      "npm publish",
    ],
    "dependencies": Array [
      "all",
    ],
    "errorOnVersionRange": null,
    "manager": "javascript",
    "path": "./packages/assemble1",
    "pkg": "assemble1",
    "pkgFile": Object {
      "name": "assemble1",
      "pkg": Object {
        "name": "assemble1",
        "version": "0.0.0",
      },
      "version": "0.0.0",
      "versionMajor": 0,
      "versionMinor": 0,
      "versionPatch": 0,
      "versionPrerelease": null,
    },
    "postcommand": null,
    "precommand": null,
  },
  Object {
    "command": Array [
      "cargo publish",
    ],
    "dependencies": Array [
      "assemble1",
      "all",
    ],
    "errorOnVersionRange": null,
    "manager": "cargo",
    "path": "./packages/namespaced-assemble2",
    "pkg": "@namespaced/assemble1",
    "pkgFile": Object {
      "name": "@namespaced/assemble1",
      "pkg": Object {
        "name": "@namedspaced/assemble2",
        "version": "0.0.0",
      },
      "version": "0.0.0",
      "versionMajor": 0,
      "versionMinor": 0,
      "versionPatch": 0,
      "versionPrerelease": null,
    },
    "postcommand": null,
    "precommand": null,
  },
  Object {
    "command": Array [
      "cargo publish",
    ],
    "dependencies": Array [
      "assemble2",
      "all",
    ],
    "errorOnVersionRange": null,
    "manager": "cargo",
    "path": "./packages/namespaced-assemble2",
    "pkg": "@namespaced/assemble2",
    "pkgFile": Object {
      "name": "@namespaced/assemble2",
      "pkg": Object {
        "name": "@namedspaced/assemble2",
        "version": "0.0.0",
      },
      "version": "0.0.0",
      "versionMajor": 0,
      "versionMinor": 0,
      "versionPatch": 0,
      "versionPrerelease": null,
    },
    "postcommand": null,
    "precommand": null,
  },
]
`;

exports[`merge config test merges version 1`] = `
Object {
  "commands": Array [
    Object {
      "command": Array [
        "cargo version patch",
      ],
      "dependencies": Array [
        "assemble2",
        "all",
      ],
      "errorOnVersionRange": null,
      "manager": "cargo",
      "path": "./packages/namespaced-assemble2",
      "pkg": "@namespaced/assemble2",
      "postcommand": null,
      "precommand": null,
      "type": "patch",
    },
    Object {
      "command": Array [
        "lerna version minor --no-git-tag-version --no-push",
      ],
      "dependencies": Array [
        "all",
      ],
      "errorOnVersionRange": null,
      "manager": "javascript",
      "path": "./packages/assemble1",
      "pkg": "assemble1",
      "postcommand": null,
      "precommand": null,
      "type": "minor",
    },
    Object {
      "command": Array [
        "lerna version major",
      ],
      "dependencies": Array [
        "all",
      ],
      "errorOnVersionRange": null,
      "manager": undefined,
      "path": "./packages/assemble2",
      "pkg": "assemble2",
      "postcommand": null,
      "precommand": null,
      "type": "major",
    },
  ],
  "pipeTemplate": Object {
    "@namespaced/assemble2": Object {
      "name": "@namespaced/assemble2",
      "pipe": Object {
        "pkg": Object {
          "command": "cargo version \${ release.type }",
          "dependencies": Array [
            "assemble2",
            "all",
          ],
          "errorOnVersionRange": null,
          "manager": "cargo",
          "path": "./packages/namespaced-assemble2",
          "pkg": "@namespaced/assemble2",
          "postcommand": null,
          "precommand": null,
        },
        "release": Object {
          "changes": Array [
            Object {
              "releases": Object {
                "@namespaced/assemble2": "patch",
                "assemble1": "patch",
              },
              "summary": "This is a test.",
            },
          ],
          "type": "patch",
        },
      },
    },
    "assemble1": Object {
      "name": "assemble1",
      "pipe": Object {
        "pkg": Object {
          "command": "lerna version \${ release.type } --no-git-tag-version --no-push",
          "dependencies": Array [
            "all",
          ],
          "errorOnVersionRange": null,
          "manager": "javascript",
          "path": "./packages/assemble1",
          "pkg": "assemble1",
          "postcommand": null,
          "precommand": null,
        },
        "release": Object {
          "changes": Array [
            Object {
              "releases": Object {
                "assemble1": "patch",
                "assemble2": "patch",
              },
              "summary": "This is a test.",
            },
            Object {
              "releases": Object {
                "assemble1": "minor",
                "assemble2": "patch",
              },
              "summary": "This is a test.",
            },
            Object {
              "releases": Object {
                "assemble1": "patch",
                "assemble2": "major",
              },
              "summary": "This is a test.",
            },
            Object {
              "releases": Object {
                "@namespaced/assemble2": "patch",
                "assemble1": "patch",
              },
              "summary": "This is a test.",
            },
          ],
          "type": "minor",
        },
      },
    },
    "assemble2": Object {
      "name": "assemble2",
      "pipe": Object {
        "pkg": Object {
          "command": "lerna version \${ release.type }",
          "dependencies": Array [
            "all",
          ],
          "errorOnVersionRange": null,
          "manager": undefined,
          "path": "./packages/assemble2",
          "pkg": "assemble2",
          "postcommand": null,
          "precommand": null,
        },
        "release": Object {
          "changes": Array [
            Object {
              "releases": Object {
                "assemble1": "patch",
                "assemble2": "patch",
              },
              "summary": "This is a test.",
            },
            Object {
              "releases": Object {
                "assemble1": "minor",
                "assemble2": "patch",
              },
              "summary": "This is a test.",
            },
            Object {
              "releases": Object {
                "assemble1": "patch",
                "assemble2": "major",
              },
              "summary": "This is a test.",
            },
          ],
          "type": "major",
        },
      },
    },
  },
}
`;

exports[`merge config test merges version without command 1`] = `
Object {
  "commands": Array [],
  "pipeTemplate": Object {},
}
`;

exports[`merge filtered config test merges publish 1`] = `
Array [
  Object {
    "command": Array [
      "npm publish",
    ],
    "dependencies": Array [
      "all",
    ],
    "errorOnVersionRange": null,
    "manager": "javascript",
    "path": "./packages/assemble1",
    "pkg": "assemble1",
    "pkgFile": Object {
      "name": "assemble1",
      "pkg": Object {
        "name": "assemble1",
        "version": "0.0.0",
      },
      "version": "0.0.0",
      "versionMajor": 0,
      "versionMinor": 0,
      "versionPatch": 0,
      "versionPrerelease": null,
    },
    "postcommand": null,
    "precommand": null,
  },
  Object {
    "command": Array [
      "cargo publish",
    ],
    "dependencies": Array [
      "assemble1",
      "all",
    ],
    "errorOnVersionRange": null,
    "manager": "cargo",
    "path": "./packages/namespaced-assemble2",
    "pkg": "@namespaced/assemble1",
    "pkgFile": Object {
      "name": "@namespaced/assemble1",
      "pkg": Object {
        "name": "@namedspaced/assemble2",
        "version": "0.0.0",
      },
      "version": "0.0.0",
      "versionMajor": 0,
      "versionMinor": 0,
      "versionPatch": 0,
      "versionPrerelease": null,
    },
    "postcommand": null,
    "precommand": null,
  },
]
`;

exports[`merge filtered config test merges version 1`] = `
Object {
  "commands": Array [],
  "pipeTemplate": Object {},
}
`;

exports[`special bump types handles an only noop 1`] = `
Object {
  "changes": Array [
    Object {
      "releases": Object {
        "assemble1": "housekeeping",
        "assemble2": "workflows",
      },
      "summary": "This is a test.",
    },
  ],
  "releases": Object {
    "assemble1": Object {
      "changes": Array [
        Object {
          "releases": Object {
            "assemble1": "housekeeping",
            "assemble2": "workflows",
          },
          "summary": "This is a test.",
        },
      ],
      "type": "noop",
    },
    "assemble2": Object {
      "changes": Array [
        Object {
          "releases": Object {
            "assemble1": "housekeeping",
            "assemble2": "workflows",
          },
          "summary": "This is a test.",
        },
      ],
      "type": "noop",
    },
  },
}
`;

exports[`special bump types valid additional bump types 1`] = `
Object {
  "changes": Array [
    Object {
      "releases": Object {
        "assemble1": "patch",
        "assemble2": "patch",
      },
      "summary": "This is a test.",
    },
    Object {
      "releases": Object {
        "assemble1": "minor",
        "assemble2": "patch",
      },
      "summary": "This is a test.",
    },
    Object {
      "releases": Object {
        "assemble1": "patch",
        "assemble2": "major",
      },
      "summary": "This is a test.",
    },
    Object {
      "releases": Object {
        "@namespaced/assemble2": "patch",
        "assemble1": "patch",
      },
      "summary": "This is a test. We might link out to a [website](https://www.jacobbolda.com).",
    },
    Object {
      "releases": Object {
        "assemble1": "housekeeping",
        "assemble2": "workflows",
      },
      "summary": "This is a test.",
    },
  ],
  "releases": Object {
    "@namespaced/assemble2": Object {
      "changes": Array [
        Object {
          "releases": Object {
            "@namespaced/assemble2": "patch",
            "assemble1": "patch",
          },
          "summary": "This is a test. We might link out to a [website](https://www.jacobbolda.com).",
        },
      ],
      "type": "patch",
    },
    "assemble1": Object {
      "changes": Array [
        Object {
          "releases": Object {
            "assemble1": "patch",
            "assemble2": "patch",
          },
          "summary": "This is a test.",
        },
        Object {
          "releases": Object {
            "assemble1": "minor",
            "assemble2": "patch",
          },
          "summary": "This is a test.",
        },
        Object {
          "releases": Object {
            "assemble1": "patch",
            "assemble2": "major",
          },
          "summary": "This is a test.",
        },
        Object {
          "releases": Object {
            "@namespaced/assemble2": "patch",
            "assemble1": "patch",
          },
          "summary": "This is a test. We might link out to a [website](https://www.jacobbolda.com).",
        },
        Object {
          "releases": Object {
            "assemble1": "housekeeping",
            "assemble2": "workflows",
          },
          "summary": "This is a test.",
        },
      ],
      "type": "minor",
    },
    "assemble2": Object {
      "changes": Array [
        Object {
          "releases": Object {
            "assemble1": "patch",
            "assemble2": "patch",
          },
          "summary": "This is a test.",
        },
        Object {
          "releases": Object {
            "assemble1": "minor",
            "assemble2": "patch",
          },
          "summary": "This is a test.",
        },
        Object {
          "releases": Object {
            "assemble1": "patch",
            "assemble2": "major",
          },
          "summary": "This is a test.",
        },
        Object {
          "releases": Object {
            "assemble1": "housekeeping",
            "assemble2": "workflows",
          },
          "summary": "This is a test.",
        },
      ],
      "type": "major",
    },
  },
}
`;
